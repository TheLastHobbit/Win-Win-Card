{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_erc20",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "ECDSAInvalidSignature",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "length",
						"type": "uint256"
					}
				],
				"name": "ECDSAInvalidSignatureLength",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "ECDSAInvalidSignatureS",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "currentNonce",
						"type": "uint256"
					}
				],
				"name": "InvalidAccountNonce",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidShortString",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "str",
						"type": "string"
					}
				],
				"name": "StringTooLong",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "CardAddr",
						"type": "address"
					}
				],
				"name": "Deal",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "EIP712DomainChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "shop",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "charge",
						"type": "uint256"
					}
				],
				"name": "chargeEvent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "account",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "aware",
						"type": "uint256"
					}
				],
				"name": "transAware",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "verifyer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "CardAddr",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "signature",
						"type": "bytes"
					}
				],
				"name": "verify",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "seller",
						"type": "address"
					},
					{
						"internalType": "address payable",
						"name": "shopAddr",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_CardAddr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_price",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "TransNum",
						"type": "uint256"
					}
				],
				"name": "buy",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "eip712Domain",
				"outputs": [
					{
						"internalType": "bytes1",
						"name": "fields",
						"type": "bytes1"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "version",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "chainId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "verifyingContract",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "salt",
						"type": "bytes32"
					},
					{
						"internalType": "uint256[]",
						"name": "extensions",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "erc20",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "getCharge",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "nonces",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "seller",
						"type": "address"
					},
					{
						"internalType": "address payable",
						"name": "shopAddr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_price",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_CardAddr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "TransNum",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_signature",
						"type": "bytes"
					}
				],
				"name": "permitListbuy",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "NFTAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "NFTid",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_signature",
						"type": "bytes"
					}
				],
				"name": "permitStore",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"ECDSAInvalidSignature()": [
					{
						"details": "The signature derives the `address(0)`."
					}
				],
				"ECDSAInvalidSignatureLength(uint256)": [
					{
						"details": "The signature has an invalid length."
					}
				],
				"ECDSAInvalidSignatureS(bytes32)": [
					{
						"details": "The signature has an S value that is in the upper half order."
					}
				],
				"InvalidAccountNonce(address,uint256)": [
					{
						"details": "The nonce used for an `account` is not the expected current nonce."
					}
				]
			},
			"events": {
				"EIP712DomainChanged()": {
					"details": "MAY be emitted to signal that the domain could have changed."
				}
			},
			"kind": "dev",
			"methods": {
				"eip712Domain()": {
					"details": "See {IERC-5267}."
				},
				"nonces(address)": {
					"details": "Returns the next unused nonce for an address."
				}
			},
			"title": "NFTMarket contract that allows atomic swaps of ERC20 and ERC721",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"src/Card_market.sol": "CardMarket"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": [
			":ds-test/=lib/forge-std/lib/ds-test/src/",
			":forge-std/=lib/forge-std/src/"
		]
	},
	"sources": {
		"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
			"keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
			"license": "MIT",
			"urls": [
				"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
				"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
			]
		},
		"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
			"license": "MIT",
			"urls": [
				"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
				"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
				"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
				"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"lib/forge-std/src/console.sol": {
			"keccak256": "0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837",
			"license": "MIT",
			"urls": [
				"bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42",
				"dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63"
			]
		},
		"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
			"keccak256": "0x28b2a1f629338ad9bfe7bdab27a478f3d04001bbde67aefb48f473e01589a05a",
			"license": "MIT",
			"urls": [
				"bzz-raw://b13fe921b3a4db8194370374451c3243045d4852e6e27c00fe161acc3eff59ee",
				"dweb:/ipfs/QmfNmkXJsDj9x2et6BTibrbonVGhcP8bRDkRTiXuqhevvR"
			]
		},
		"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3",
			"license": "MIT",
			"urls": [
				"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204",
				"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ"
			]
		},
		"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728",
			"license": "MIT",
			"urls": [
				"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd",
				"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz"
			]
		},
		"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
			"keccak256": "0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c",
			"license": "MIT",
			"urls": [
				"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04",
				"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/Nonces.sol": {
			"keccak256": "0xb2ac469a92e3980b87267eacabd4e470df6cf278858efa230f69c723316c138d",
			"license": "MIT",
			"urls": [
				"bzz-raw://3ce61d28f35bf80f21d884b285b4061c938e400a0d90d7a8176e2cacf29b5eaf",
				"dweb:/ipfs/Qmar9FHYkwMVvQYtDoeJFETryVwBPTPs1dxhvKG1AMah1c"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
			"keccak256": "0xee8d332ccb6fde868e14d766aeff6e1c139b23942e456867f8541740d53608ad",
			"license": "MIT",
			"urls": [
				"bzz-raw://108e2f859cce1ce6f28615199cf951e87022c78fd161a55da353e51615930564",
				"dweb:/ipfs/QmWvGG7mue3WNYrham6cNRhBNY3bEzdFutMEkLBEDNougg"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
			"keccak256": "0xaf4f1cc7a79833f62322e257c405bcc1f5d76bd0d9eba10ab17d890ce2e4ec4d",
			"license": "MIT",
			"urls": [
				"bzz-raw://d8c7891489c7dc56f84a8b8d9b5507b893bf45de931be6a501be22dfade66aff",
				"dweb:/ipfs/QmYwu2yuP3GrcvT9eM1gd8M65RpUsRaRoyLsWcVLDbeQcG"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
			"keccak256": "0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92",
			"license": "MIT",
			"urls": [
				"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368",
				"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
			"keccak256": "0x2d8207531ade88bd3e1c0dc264c1c8c1a46a62d3f79d6b0ddad7743d886f2eef",
			"license": "MIT",
			"urls": [
				"bzz-raw://bf6c34e642d31633434efc3381aeab02876928da15386459d9158e070ed5b27a",
				"dweb:/ipfs/QmQp6H9WZ93V5byxvYQbcFjRtiHTj8RbqadMWmivMLx5B8"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
			"keccak256": "0x969cdd93cf4321ba534d61127d7127da83bb807be4b3b84f029b0aa1e41b5851",
			"license": "MIT",
			"urls": [
				"bzz-raw://57b66f3ca0fc32ad41d02463de1566f2c4fe007a03ea50d3ebbfe3c58d76eff3",
				"dweb:/ipfs/QmTRCri2AtWnhm1Dj4uzuE7Jr1utpP82oRuwq3sxRRtfaW"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol": {
			"keccak256": "0x481eac0573c56cb92c225e3d7c3a8509db8ce6f907a2af44fdfef486740bb3eb",
			"license": "MIT",
			"urls": [
				"bzz-raw://d341e11ae851c1356a3c1570fac620c19c6b4e1269f7eaee9a1f1583c1c83891",
				"dweb:/ipfs/QmaRVN9TFLpVvVJfjwiLx9fttDhr5C83NoJmyXgriKXS4T"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d",
			"license": "MIT",
			"urls": [
				"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9",
				"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
			"keccak256": "0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02",
			"license": "MIT",
			"urls": [
				"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063",
				"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
			"keccak256": "0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb",
			"license": "MIT",
			"urls": [
				"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf",
				"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6"
			]
		},
		"src/Card_market.sol": {
			"keccak256": "0xff33d48147fdd1a9e6ce8dbfedce06b8f4a2c8c076a0473ccf551c657c2c47cc",
			"license": "MIT",
			"urls": [
				"bzz-raw://18ed0e5572565d6301c4e493d936dd10ebc8accb73e1841e855634cf00961519",
				"dweb:/ipfs/QmYBJ4Q6vNfbZvu1C1QFe5DHjvTbPtfrtQizJAvyFMiHDs"
			]
		},
		"src/erc20-usdt.sol": {
			"keccak256": "0xfe75a70e6b37caada95713b4d5ca44b45f20ac2c01227d074ae34e864bfcb1ca",
			"license": "MIT",
			"urls": [
				"bzz-raw://cd13c1bc75546cf6bc8df1f83b2d5a7cde922a51aaf69152395b61609c1466e1",
				"dweb:/ipfs/QmXWmQf52rMxx3CHrgwGL4S35iWXtRSEXxNYxEd4gAQmXH"
			]
		}
	},
	"version": 1
}